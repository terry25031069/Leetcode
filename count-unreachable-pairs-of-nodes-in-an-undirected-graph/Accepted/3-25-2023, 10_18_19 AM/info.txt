{"id":921593642,"question_id":2403,"lang":"cpp","lang_name":"C++","time":"11 months, 3 weeks","timestamp":1679710699,"status":10,"status_display":"Accepted","runtime":"596 ms","url":"/submissions/detail/921593642/","is_pending":"Not Pending","title":"Count Unreachable Pairs of Nodes in an Undirected Graph","memory":"165.2 MB","code":"class Solution {\npublic:\n    vector<int> p;\n    int find(int n){\n        return (p[n] == n? n: p[n] = find(p[n]));\n    }\n    long long countPairs(int n, vector<vector<int>>& edges) {\n        p.resize(n);\n        for(int i = 0; i < n; i++) p[i] = i;\n        for(auto v: edges){\n            int pa = find(v[0]), pb = find(v[1]);\n            if(pa != pb){\n                p[pb] = pa;\n            }\n        }\n        map<int, int> m;\n        for(int i = 0; i < n; i++){\n            p[i] = find(p[i]);\n            //cout << i << ' ' << p[i] << endl;\n            m[p[i]]++;\n        }\n        long long ans = (int64_t)n * (n - 1) / 2;\n        for(auto [k, v]: m) ans -= (int64_t)v * (v - 1) / 2;\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-unreachable-pairs-of-nodes-in-an-undirected-graph","has_notes":false,"flag_type":1}