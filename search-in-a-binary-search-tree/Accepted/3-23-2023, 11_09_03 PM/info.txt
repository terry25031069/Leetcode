{"id":920775849,"question_id":783,"lang":"cpp","lang_name":"C++","time":"11 months, 3 weeks","timestamp":1679584143,"status":10,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/920775849/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"34.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        while(root){\n            if(root->val < val) root = root->right;\n            else if(root->val == val) return root;\n            else root = root->left;\n        }\n        return NULL;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}