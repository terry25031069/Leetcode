{"id":1170537772,"question_id":368,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1707475962,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1170537772/","is_pending":"Not Pending","title":"Largest Divisible Subset","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> largestDivisibleSubset(vector<int>& nums) {\n        int n = nums.size();\n        sort(nums.begin(), nums.end());\n        vector<int> ans(n), prev(n);\n        fill_n(ans.begin(), n, 1);\n        for(int i = 0; i < n; i++) prev[i] = i;\n        for(int i = 1; i < n; i++){\n            for(int j = i - 1; j > -1; j--){\n                if(nums[i] % nums[j] == 0){\n                    prev[i] = j;\n                    ans[i] = ans[j] + 1;\n                    break;\n                }\n            }\n        }\n        int coord = max_element(ans.begin(), ans.end()) - ans.begin();\n        vector<int> ret_ans{nums[coord]};\n        while(coord != prev[coord]){\n            coord = prev[coord];\n            ret_ans.push_back(nums[coord]);\n        }\n        return ret_ans;\n    }\n};","compare_result":"1111111111101011111111111101111111111111111111111","title_slug":"largest-divisible-subset","has_notes":false,"flag_type":1}