{"id":937398510,"question_id":911,"lang":"cpp","lang_name":"C++","time":"10 months, 3 weeks","timestamp":1682078810,"status":10,"status_display":"Accepted","runtime":"293 ms","url":"/submissions/detail/937398510/","is_pending":"Not Pending","title":"Profitable Schemes","memory":"12.9 MB","code":"class Solution {\npublic:\n\n    vector<int>group;\n    vector<int>profit;\n    int minprofit;\n    int mod = 1e9 + 7;\n    int dp[101][101][101];\n    int find(int id,int n,int totalprofit){\n        \n        if(id==profit.size()) return 0;\n        if(dp[id][n][totalprofit]!=-1) return dp[id][n][totalprofit];\n        //if we are at current index we either choose or not choose\n        //if choose\n        int ans = 0;\n        if(n >= group[id]){ //if we can choose\n            int newprofit = max(0,totalprofit - profit[id]);\n            if(newprofit <= 0) ans+= (1 + find(id + 1,n-group[id],newprofit)%mod)%mod;\n            else ans+= find(id + 1,n-group[id],newprofit)%mod;\n        }\n        \n        //if we don not choose\n        ans%=mod;\n        ans+=find(id+1,n,totalprofit)%mod;\n        ans = ans%mod;\n        return dp[id][n][totalprofit] = ans%mod;\n    }\n    int profitableSchemes(int n, int _minProfit, vector<int>& _group, vector<int>& _profit) {\n        minprofit = _minProfit;\n        group = _group;\n        profit = _profit;\n        for(int i = 0;i<101;i++){\n            for(int j = 0;j<101;j++){\n               for(int k = 0;k<101;k++){\n                    dp[i][j][k]  = -1;\n                }\n            }\n        }\n        int ans = find(0,n,minprofit)%mod;\n        if(minprofit==0) ans++;\n        ans%=mod;\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111","title_slug":"profitable-schemes","has_notes":false,"flag_type":1}