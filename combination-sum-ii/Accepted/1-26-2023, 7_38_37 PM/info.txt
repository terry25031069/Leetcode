{"id":885618839,"question_id":40,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1674733117,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/885618839/","is_pending":"Not Pending","title":"Combination Sum II","memory":"10.7 MB","code":"class Solution {\npublic:\n    vector<vector<int>> ans;\n    void dfs(int idx, int target, vector<int> &arr, vector<int> &tmp){\n        //for(auto i: tmp) cout << i << ' '; cout << endl;\n        if(target == 0){\n            ans.push_back(tmp);\n            return;\n        }\n        for(int i = idx; i < arr.size(); i++){\n            if(i > idx && arr[i] == arr[i - 1]) continue;\n            if(target >= arr[i]){\n                tmp.push_back(arr[i]);\n                dfs(i + 1, target - arr[i], arr, tmp);\n                tmp.pop_back();\n            }\n        }\n    }\n    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {\n        sort(candidates.begin(), candidates.end());\n        vector<int> emp;\n        dfs(0, target, candidates, emp);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum-ii","has_notes":false,"flag_type":1}