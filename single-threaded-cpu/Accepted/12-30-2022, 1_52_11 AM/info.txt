{"id":867639607,"question_id":1962,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1672336331,"status":10,"status_display":"Accepted","runtime":"1152 ms","url":"/submissions/detail/867639607/","is_pending":"Not Pending","title":"Single-Threaded CPU","memory":"166.7 MB","code":"struct taskCmp{\n    bool operator () (const vector<int> &a, const vector<int> &b){\n        if(a[1] != b[1]) return a[1] > b[1];\n        return a[2] > b[2];\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> getOrder(vector<vector<int>>& tasks) {\n        for(int i = 0; i < tasks.size(); i++){\n            tasks[i].push_back(i);\n        }\n        sort(tasks.begin(), tasks.end());\n        vector<int> ans;\n        int idx = 1;\n        int curTime = tasks[0][0];\n        priority_queue<vector<int>, vector<vector<int>>, taskCmp>q; \n        q.push(tasks[0]);\n        while(!q.empty()){\n            auto top = q.top(); q.pop(); \n            ans.push_back(top[2]);\n            curTime = min(1000000000, max(top[0], curTime) + top[1]);\n            while(idx < tasks.size() && (q.empty() || curTime >= tasks[idx][0])){\n                q.push(tasks[idx++]);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"single-threaded-cpu","has_notes":false,"flag_type":1}