{"id":937743904,"question_id":1437,"lang":"cpp","lang_name":"C++","time":"10 months, 3 weeks","timestamp":1682143135,"status":10,"status_display":"Accepted","runtime":"102 ms","url":"/submissions/detail/937743904/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"28.6 MB","code":"class Solution {\npublic:\n    int lcs(string t, string s, vector<vector<int>>&dp){\n        int n = s.size();\n        for(int i = 0; i <= n; i++){\n            for(int j = 0; j <= n; j++){\n                if(i == 0 || j == 0)\n                dp[i][j] = 0;\n            }\n        }\n\n        for(int i = 1; i <= n; i++){\n            for(int j = 1; j <= n; j++){\n                if(s[i-1] == t[j-1]){\n                    dp[i][j] = 1 + dp[i-1][j-1];\n                } else{\n                    dp[i][j] = max(dp[i-1][j],dp[i][j-1]);\n                }\n            }\n        }\n        return dp[n][n];\n    }\n    \n    int minInsertions(string s) {\n        string t = s;\n        reverse(t.begin(),t.end());\n        int n = s.size();\n        vector<vector<int>>dp(n+1,vector<int>(n+1,0));\n        return n - lcs(s,t,dp);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome","has_notes":false,"flag_type":1}