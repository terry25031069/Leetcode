{"id":903629975,"question_id":391,"lang":"python3","lang_name":"Python3","time":"1Â year","timestamp":1677169473,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/903629975/","is_pending":"Not Pending","title":"Perfect Rectangle","memory":"N/A","code":"def area(l):\n    return (l[2] - l[0]) * (l[3] - l[1])\n\ndef coarea(l1, l2):\n    leng, wid = 0, 0\n    if not(l1[2] <= l2[0] or l2[2] <= l1[0]): \n        s = sorted([l1[0], l1[2], l2[0], l2[2]])\n        leng = s[2] - s[1]\n    if not (l1[3] <= l2[1] or l2[3] <= l1[1]):\n        s = [l1[1], l1[3], l2[1], l2[3]]\n        wid = s[2] - s[1]\n    return leng and wid\n\nclass Solution:\n    def isRectangleCover(self, rectangles: List[List[int]]) -> bool:\n        summ = 0\n        for i in range(len(rectangles) - 1):\n            for j in range(i + 1, len(rectangles)):\n                minx = min(rectangles[i][0], rectangles[j][0])\n                miny = min(rectangles[i][1], rectangles[j][1])\n                maxx = max(rectangles[i][2], rectangles[j][2])\n                maxy = max(rectangles[i][3], rectangles[j][3])\n                if coarea(rectangles[i], rectangles[j]):\n                    return False\n\n        minx, miny = 1e6, 1e6\n        maxx, maxy = -1e6, -1e6\n        for i in range(len(rectangles)):\n            summ += area(rectangles[i])\n            minx = min(rectangles[i][0], minx)\n            miny = min(rectangles[i][1], miny)\n            maxx = max(rectangles[i][2], maxx)\n            maxy = max(rectangles[i][3], maxy)\n        area_max = area([minx, miny, maxx, maxy])\n        return area_max == summ","compare_result":"1111111111111111111111111111111111111111100000000","title_slug":"perfect-rectangle","has_notes":false,"flag_type":1}