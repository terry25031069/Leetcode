{"id":837226844,"question_id":212,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1667635932,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/837226844/","is_pending":"Not Pending","title":"Word Search II","memory":"N/A","code":"class Solution {\npublic:\n    bool DFS(vector<vector<char>>& board, string s, int deep, int x, int y){\n        if(s[deep] != board[x][y]) return false;\n        else{\n            bool ans = 0;\n            int dx[4] = {0, 1, 0, -1}, dy[4] = {1, 0, -1, 0};\n            for(int k = 0; k < 4; k++){\n                if(deep + 1 == s.size()) return true;\n                if(x + dx[k] >= 0 && x + dx[k] < board.size() \n                && y + dy[k] >= 0 && y + dy[k] < board[0].size()){\n                    ans |= DFS(board, s, deep + 1, x + dx[k], y + dy[k]);\n                }\n                \n            }\n            return ans;\n        }\n    }\n    vector<string> findWords(vector<vector<char>>& board, vector<string>& words) {\n        vector<string> ans;\n        map<string, int> sset;\n        for(int i = 0; i < board.size(); i++){\n            for(int j = 0; j < board[0].size(); j++){\n                for(auto s: words){\n                    if(DFS(board, s, 0, i, j) == 1 && sset[s] == 0){\n                        ans.push_back(s);\n                        sset[s] = 1;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111101101111101110000000000000000000000000000000000000000000","title_slug":"word-search-ii","has_notes":false,"flag_type":1}