{"id":936335041,"question_id":1474,"lang":"cpp","lang_name":"C++","time":"10 months, 4 weeks","timestamp":1681906297,"status":10,"status_display":"Accepted","runtime":"158 ms","url":"/submissions/detail/936335041/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"94.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int res = 0;\n\n    void solve(TreeNode* node, bool goLeft, int currPathLen) {\n        if (!node) return;\n        res = max(res, currPathLen);\n        if (goLeft) {\n            solve(node->left, false, currPathLen + 1);\n            solve(node->right, true, 1);\n        } else {\n            solve(node->right, true, currPathLen + 1);\n            solve(node->left, false, 1);\n        }\n    }\n\n    int longestZigZag(TreeNode* root) {\n        solve(root, true, 0);\n        solve(root, false, 0);\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"longest-zigzag-path-in-a-binary-tree","has_notes":false,"flag_type":1}