{"id":814734928,"question_id":113,"lang":"cpp","lang_name":"C++","time":"1 year, 5 months","timestamp":1664858404,"status":10,"status_display":"Accepted","runtime":"1188 ms","url":"/submissions/detail/814734928/","is_pending":"Not Pending","title":"Path Sum II","memory":"138 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> path;\n    vector<vector<int>> ans; \n    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {\n        if(root == NULL) return ans;\n        cout << root->val << ' ' << targetSum << endl;\n        cout << \"path: \";\n        for(int i = 0; i < path.size(); i++)\n            cout << path[i] << \" \\n\"[i == path.size() - 1];\n        if(targetSum == root->val && root->left == NULL && root->right == NULL){\n            path.emplace_back(root->val);\n            ans.emplace_back(path);\n            path.pop_back();\n        }\n        if(root->left != NULL){\n            path.emplace_back(root->val);\n            pathSum(root->left, targetSum - root->val);\n            path.pop_back();\n        }\n        if(root->right != NULL){\n            path.emplace_back(root->val);\n            pathSum(root->right, targetSum - root->val);\n            path.pop_back();\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false,"flag_type":1}