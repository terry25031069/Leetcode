{"id":1199358362,"question_id":3334,"lang":"cpp","lang_name":"C++","time":"2 days, 8 hours","timestamp":1710054759,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1199358362/","is_pending":"Not Pending","title":"Apple Redistribution into Boxes","memory":"33.5 MB","code":"class Solution {\npublic:\n    int minimumBoxes(vector<int>& apple, vector<int>& capacity) {\n        sort(capacity.rbegin(), capacity.rend());\n        int k = accumulate(apple.begin(), apple.end(), 0);\n        cout << k << endl;\n        int ans = 0;\n        while(ans < capacity.size()){\n            k -= capacity[ans];\n            if(k <= 0) break;\n            ans++;\n        }\n        return min(int(capacity.size()), ans + 1);\n    }\n};","compare_resulttitle_slug":"apple-redistribution-into-boxes","has_notes":false,"flag_type":1}