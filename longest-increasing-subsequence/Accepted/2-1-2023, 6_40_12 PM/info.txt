{"id":889342836,"question_id":300,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1675248012,"status":10,"status_display":"Accepted","runtime":"297 ms","url":"/submissions/detail/889342836/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.5 MB","code":"class Solution {\npublic:\n    int inf = 1e9;\n    int lengthOfLIS(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> dp(n, 1);\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < i; j++){\n                if(nums[i] > nums[j]) dp[i] = max(dp[i], dp[j] + 1);\n            }\n        }\n        return *max_element(dp.begin(), dp.end());\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}