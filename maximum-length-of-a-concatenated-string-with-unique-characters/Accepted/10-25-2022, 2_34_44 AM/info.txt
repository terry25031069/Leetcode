{"id":829428546,"question_id":1360,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1666636484,"status":10,"status_display":"Accepted","runtime":"2473 ms","url":"/submissions/detail/829428546/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"184 MB","code":"class Solution {\npublic:\n    int hash(string s){\n        int ans = 0;\n        for(auto i: s){\n            if((ans & (1 << (i - 'a'))) == 0){\n                ans += 1 << (i - 'a');\n            }else{\n                return 0;\n            }\n        }\n        return ans;\n    }\n    int maxLength(vector<string>& arr) {\n        int ans = 0;\n        vector<string>tmp{};\n        for(auto i: arr){\n            if(hash(i))tmp.push_back(i);\n        }\n        arr = tmp;\n        for(int i = ((1 << arr.size()) - 1); i > -1; i--){\n            int con = 0, add = 0, tmpsize = 0;\n            for(int bit = 0; bit < arr.size(); bit++){\n                if((i>>bit) & 1)con |= hash(arr[bit]), add += hash(arr[bit]), tmpsize += arr[bit].size();\n            }\n            if(con == add && con != 0) ans = max(ans, tmpsize);\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters","has_notes":false,"flag_type":1}