{"id":892638252,"question_id":108,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1675688700,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/892638252/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        int idx = nums.size() / 2;\n        TreeNode *ori = new TreeNode(nums[idx]), *ans = ori;\n        for(int i = idx - 1; i >= 0; i--){\n            ans->left = new TreeNode(nums[i]);\n            ans = ans->left;\n        }\n        ans = ori;\n        for(int i = idx + 1; i < nums.size(); i++){\n            ans->right = new TreeNode(nums[i]);\n            ans = ans->right;\n        }\n        return ori;\n    }\n};","compare_result":"1111100000000000000000000000000","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}