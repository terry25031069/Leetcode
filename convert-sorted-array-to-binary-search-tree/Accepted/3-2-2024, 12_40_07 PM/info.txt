{"id":1191165842,"question_id":108,"lang":"cpp","lang_name":"C++","time":"1 week, 3 days","timestamp":1709354407,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1191165842/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"24.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        if(nums.size() == 0) return NULL;\n        if(nums.size() == 1) return new TreeNode(nums[0]);\n        int n = nums.size();\n        TreeNode* root = new TreeNode(nums[n / 2]);\n        auto ll = nums.begin(), lr = nums.begin() + n / 2;\n        auto rl = nums.begin() + n / 2 + 1, rr = nums.end();\n        vector<int> newL(ll, lr), newR(rl, rr);\n        root->left = sortedArrayToBST(newL);\n        root->right = sortedArrayToBST(newR);\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}