{"id":1201233302,"question_id":61,"lang":"cpp","lang_name":"C++","time":"9 hours, 39 minutes","timestamp":1710222779,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1201233302/","is_pending":"Not Pending","title":"Rotate List","memory":"15.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        if(k == 0 || !head) return head;\n        vector<int> v;\n        while(head) v.push_back(head->val), head = head->next;\n        k %= v.size();\n        rotate(v.begin(), v.end() - k, v.end());\n        //for(int num: v) cout << num << ' '; cout << endl;\n        ListNode *tmp = new ListNode(v[0]), *ans = tmp;\n        for(int i = 1; i < v.size(); i++){\n            tmp->next = new ListNode(v[i]);\n            tmp = tmp->next;\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list","has_notes":false,"flag_type":1}