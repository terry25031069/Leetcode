{"id":909363742,"question_id":1447,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1677995811,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/909363742/","is_pending":"Not Pending","title":"Jump Game IV","memory":"N/A","code":"class Solution {\npublic:\n    int minJumps(vector<int>& arr) {\n        vector<int> dis(arr.size() + 1, 5e5); dis[0] = 0;\n        map<int, vector<int>> m; \n        for(int i = 0; i < arr.size(); i++) m[arr[i]].push_back(i);\n        // for(auto [k, v]: m){\n        //     cout << k << \": \";\n        //     for(auto idx: v) cout << idx << ' '; cout << endl;\n        // }\n        // cout << \"------------\\n\";\n        queue<int> q; q.push(0);\n        for(int i = q.size(); i >= 0; i--){\n            while(!q.empty()){\n                int f = q.front(); q.pop();\n                if(f + 1 < arr.size()){\n                    dis[f+1] = min(dis[f+1], dis[f] + 1);\n                    if(f + 2 == arr.size()) return dis[f+1];\n                    q.push(f+1);\n                }\n                if(f - 1 >= 0){\n                    dis[f-1] = min(dis[f-1], dis[f] + 1);\n                    q.push(f-1);\n                }\n                for(auto idx: m[arr[f]]){\n                    if(idx - f){\n                        dis[idx] = min(dis[idx], dis[f] + 1);\n                        if(idx == arr.size() - 1) return dis[idx];\n                        q.push(idx);\n                    }\n                }\n            }\n        }\n        return 0;\n    }\n};","compare_result":"111111111111111111111000000000000","title_slug":"jump-game-iv","has_notes":false,"flag_type":1}