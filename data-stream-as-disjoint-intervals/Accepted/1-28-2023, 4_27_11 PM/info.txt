{"id":886723638,"question_id":352,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1674894431,"status":10,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/886723638/","is_pending":"Not Pending","title":"Data Stream as Disjoint Intervals","memory":"33.5 MB","code":"class SummaryRanges {\npublic:\n    set<int> s;\n    SummaryRanges() {\n        s.clear();\n        s.insert(1e5);\n    }\n    \n    void addNum(int value) {\n        s.insert(value);\n    }\n    \n    vector<vector<int>> getIntervals() {\n        vector<vector<int>> ans;\n        int l = *s.begin(), r = *s.begin();\n        for(auto i: s){\n            if(i == r + 1) r++;\n            else if(i > r + 1){\n                ans.push_back({l, r});\n                l = r = i;\n            }\n        }\n        return ans;\n    }\n};\n\n/**\n * Your SummaryRanges object will be instantiated and called as such:\n * SummaryRanges* obj = new SummaryRanges();\n * obj->addNum(value);\n * vector<vector<int>> param_2 = obj->getIntervals();\n */","compare_result":"111111111","title_slug":"data-stream-as-disjoint-intervals","has_notes":false,"flag_type":1}