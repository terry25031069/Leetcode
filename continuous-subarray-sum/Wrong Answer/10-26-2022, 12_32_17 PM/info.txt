{"id":830430655,"question_id":523,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1666758737,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/830430655/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& nums, int k) {\n        map<int, int>mod;\n        int tot = 0;\n        for(int i = 0; i < nums.size(); i++){\n            tot = (tot + nums[i]) % k;\n            cout << tot << \" \\n\"[i == nums.size() -1];\n            if(mod[tot] == 0 && tot) mod[tot] = i + 1;\n            else return true;\n        }\n        return false;\n    }\n};","compare_result":"1111111110011111101000100011111101011111111111111111111111111111111111111111111111111111111111011","title_slug":"continuous-subarray-sum","has_notes":false,"flag_type":1}