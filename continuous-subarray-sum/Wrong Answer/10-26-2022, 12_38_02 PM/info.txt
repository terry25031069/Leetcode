{"id":830433811,"question_id":523,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1666759082,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/830433811/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& nums, int k) {\n        map<int, int>mod;\n        int tot = 0;\n        for(int i = 0; i < nums.size(); i++){\n            tot = (tot + nums[i]) % k;\n            cout << tot << \" \\n\"[i == nums.size() -1];\n            if((i + 1) - mod[tot] > 1 &&(!tot || mod[tot])) return true;\n            else mod[tot] = i + 1;\n        }\n        return false;\n    }\n};","compare_result":"1111110101100000010111011110111110111011111111111111101111111111111111111100111111111111111110111","title_slug":"continuous-subarray-sum","has_notes":false,"flag_type":1}