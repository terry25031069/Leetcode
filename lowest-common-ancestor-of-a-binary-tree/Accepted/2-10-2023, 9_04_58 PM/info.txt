{"id":895328224,"question_id":236,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1676034298,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/895328224/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"14.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if(!root) return NULL;\n        if(root->val == p->val || root->val == q->val) return root;\n\n        TreeNode* leftans = lowestCommonAncestor(root->left, p, q);\n        TreeNode* rightans = lowestCommonAncestor(root->right, p, q);\n        if(leftans && rightans) return root;\n        else if(!leftans) return rightans;\n        else if(!rightans) return leftans;\n        else return NULL;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}