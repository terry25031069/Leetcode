{"id":872824142,"question_id":51,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1673029658,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/872824142/","is_pending":"Not Pending","title":"N-Queens","memory":"7.3 MB","code":"class Solution {\npublic:\n    vector<vector<string>>ans;\n    int col[10], d1[21], d2[21];\n    vector<string> board;\n    void dfs(int n, int depth, vector<string> &tmp){\n        if(depth == n){\n            ans.emplace_back(tmp);\n            return;    \n        }\n        for(int i = 0; i < n; i++){\n            //cout << depth << ' ' << i << ' ' << col[i] << ' ' << d1[depth-i+10] << ' ' << d2[depth+i] << endl;\n            if(tmp[depth][i] == '.' && col[i] == 0 && d1[depth-i+10] == 0 && d2[depth+i] == 0){\n                tmp[depth][i] = 'Q';\n                col[i] = d1[depth-i+10] = d2[depth+i] = 1;\n                dfs(n, depth + 1, tmp);\n                tmp[depth][i] = '.';\n                col[i] = d1[depth-i+10] = d2[depth+i] = 0;\n            }\n        }\n    }\n    vector<vector<string>> solveNQueens(int n) {\n        ans.clear();\n        board = vector<string>(n, string(n, '.'));\n        memset(col, 0, sizeof(col));\n        memset(d1, 0, sizeof(d1));\n        memset(d2, 0, sizeof(d2));\n        dfs(n, 0, board);\n        return ans;\n    }\n};","compare_result":"111111111","title_slug":"n-queens","has_notes":false,"flag_type":1}