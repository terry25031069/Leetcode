{"id":1141116776,"question_id":904,"lang":"python3","lang_name":"Python3","time":"2Â months","timestamp":1704777210,"status":10,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/1141116776/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"17.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def leafSimilar(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> bool:\n        l = [[], []]\n        def dfs(root: Optional[TreeNode], num: int):\n            if root.left:\n                dfs(root.left, num)\n            if root.right:\n                dfs(root.right, num)\n            if root.left == None and root.right == None:\n                l[num].append(root.val)\n        dfs(root1, 0)\n        dfs(root2, 1)\n        return l[0] == l[1]","compare_result":"1111111111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false,"flag_type":1}