{"id":1186635917,"question_id":3269,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1708944212,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1186635917/","is_pending":"Not Pending","title":"Number of Subarrays That Match a Pattern I","memory":"42.6 MB","code":"class Solution {\npublic:\n    int countMatchingSubarrays(vector<int>& nums, vector<int>& pattern) {\n        int n = nums.size();\n        vector<int> pat;\n        for(int i = 0; i < n - 1; i++){\n            int &a = nums[i], &b = nums[i+1];\n            pat.push_back(a < b ? 1 : (a == b ? 0: -1));\n        }\n        int ans = 0, j;\n        for(int i: pat) cout << i << ' '; cout << endl;\n        for(int i = 0; i <= pat.size() - pattern.size(); i++){\n            for(j = 0; j < pattern.size(); j++){\n                if(pat[i+j] != pattern[j]) break;\n            }\n            if(j == pattern.size()) ans++;\n        }\n        return ans;\n    }\n};","compare_resulttitle_slug":"number-of-subarrays-that-match-a-pattern-i","has_notes":false,"flag_type":1}