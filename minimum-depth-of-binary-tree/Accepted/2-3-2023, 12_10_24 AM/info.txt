{"id":890151026,"question_id":111,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1675354224,"status":10,"status_display":"Accepted","runtime":"259 ms","url":"/submissions/detail/890151026/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int dfs(TreeNode* root){\n        if(root){  \n            int dl = dfs(root->left), dr = dfs(root->right);\n            if(dl == 0 && dr == 0) return 1;\n            else if(dl == 0) return dr + 1;\n            else if(dr == 0) return dl + 1;\n            return min(dl, dr) + 1;\n        }else return 0;\n    }\n    int minDepth(TreeNode* root) {\n        return dfs(root);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}