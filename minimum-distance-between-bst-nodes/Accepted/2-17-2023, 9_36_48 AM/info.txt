{"id":899463198,"question_id":799,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1676597808,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/899463198/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"9.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void dfs(TreeNode* root, vector<int> &v){\n        if(root){\n            dfs(root->left, v);\n            v.push_back(root->val);\n            dfs(root->right, v);\n        }\n    }\n    int minDiffInBST(TreeNode* root) {\n        vector<int> v;\n        dfs(root, v);\n        sort(v.begin(), v.end());\n        int ans = 1e8;\n        for(int i = 0; i < v.size() - 1; i++){\n            ans = min(ans, abs(v[i] - v[i+1]));\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"minimum-distance-between-bst-nodes","has_notes":false,"flag_type":1}