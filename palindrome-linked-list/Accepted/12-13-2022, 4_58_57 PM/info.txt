{"id":859075025,"question_id":234,"lang":"cpp","lang_name":"C++","time":"1 year, 3 months","timestamp":1670921937,"status":10,"status_display":"Accepted","runtime":"284 ms","url":"/submissions/detail/859075025/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"132.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        vector<int> array, arrayr;\n        while(head){\n            array.push_back(head->val);\n            head = head->next;\n        }\n        arrayr = array;\n        reverse(arrayr.begin(), arrayr.end());\n        if(array.size() == 0) return true; \n        for(int i = 0; i < array.size(); i++){\n            if(array[i] != arrayr[i]) return false;\n        }return true;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}