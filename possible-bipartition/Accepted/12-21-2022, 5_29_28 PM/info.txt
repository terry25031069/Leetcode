{"id":863149892,"question_id":922,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1671614968,"status":10,"status_display":"Accepted","runtime":"971 ms","url":"/submissions/detail/863149892/","is_pending":"Not Pending","title":"Possible Bipartition","memory":"78.1 MB","code":"class Solution {\npublic:\n    vector<int> node[2001];\n    int tag[2001] = {};\n    bool dfs(int parent, int cur){\n        if(parent == cur) tag[cur] = 1;\n        for(auto i: node[cur]){\n            if(tag[i] == 3 - tag[cur]) continue;\n            else if(tag[i] && 3 - tag[cur] != tag[i]){\n                return false;\n            }\n            else{\n                tag[i] = 3 - tag[cur];\n                cout << i << ' ' << tag[i] << endl;\n                dfs(cur, i);\n            }\n        }\n        return true;\n    }\n    bool possibleBipartition(int n, vector<vector<int>>& dislikes) {\n        for(auto v: dislikes){\n            node[v[0]].push_back(v[1]);\n            node[v[1]].push_back(v[0]);\n        }\n        bool ans = true;\n        for(auto v: dislikes){\n            if(!tag[v[0]])ans &= dfs(v[0], v[0]);\n            cout << ans << endl;\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"possible-bipartition","has_notes":false,"flag_type":1}