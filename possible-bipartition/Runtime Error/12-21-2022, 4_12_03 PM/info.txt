{"id":863120404,"question_id":922,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1671610323,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/863120404/","is_pending":"Not Pending","title":"Possible Bipartition","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> node[2001];\n    int tag[2001] = {};\n    bool dfs(int parent, int cur){\n        cout << parent << ' ' << cur << endl;\n        for(auto i: node[cur]){\n            if(tag[i] == 3 - tag[cur]) continue;\n            else if(!tag[i]){\n                tag[i] = 3 - tag[cur];\n                dfs(cur, i);\n            }\n            else{\n                return false;\n            }\n        }\n        return true;\n    }\n    bool possibleBipartition(int n, vector<vector<int>>& dislikes) {\n        for(auto v: dislikes){\n            node[v[0]].push_back(v[1]);\n            node[v[1]].push_back(v[0]);\n        }\n        for(int i = 1; i <= n; i++){\n            if(node[i].size()){\n                cout << i << \": \";\n                for(int j: node[i]) cout << j << ' '; cout << endl;\n            }\n        }\n        tag[dislikes[0][0]] = 1;\n        return dfs(dislikes[0][0], dislikes[0][0]);\n    }\n};","compare_result":"1111000000000000000000000000000000000000000000000000000000000000000000","title_slug":"possible-bipartition","has_notes":false,"flag_type":1}