{"id":875939157,"question_id":1554,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1673418512,"status":10,"status_display":"Accepted","runtime":"313 ms","url":"/submissions/detail/875939157/","is_pending":"Not Pending","title":"Minimum Time to Collect All Apples in a Tree","memory":"69.6 MB","code":"class Solution {\npublic:\n    map<int, vector<int>> m;\n    vector<bool> Apple;\n    int dfs(int prev, int root){\n        int ans = (Apple[root]) * 2;\n        bool check = 0;\n        for(auto e: m[root]){\n            if(e == prev) continue;\n            int tmp = dfs(root, e);\n            ans += tmp, check |= tmp;\n        }\n        return ans + (check && !Apple[root]) * 2;\n    }\n    int minTime(int n, vector<vector<int>>& edges, vector<bool>& hasApple) {\n        for(int i = 0; i < edges.size(); i++){\n            auto &v = edges[i];\n            m[v[0]].push_back(v[1]);\n            m[v[1]].push_back(v[0]);\n        }\n        Apple = hasApple;\n        int ans = dfs(0, 0);\n        if(!ans) return 0;\n        return ans - 2;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"minimum-time-to-collect-all-apples-in-a-tree","has_notes":false,"flag_type":1}