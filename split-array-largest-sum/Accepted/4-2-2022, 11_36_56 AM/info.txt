{"id":671968256,"question_id":410,"lang":"cpp","lang_name":"C++","time":"1 year, 11 months","timestamp":1648870616,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/671968256/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"7.2 MB","code":"class Solution {\npublic:\n    int splitArray(vector<int>& nums, int m) {\n            int L = -1, R = 1e9;\n            for(auto i: nums) L = max(L, i);\n            while(L < R){\n                int M = L + R >> 1, cnt = 0, tmpsum = 0;\n                cout << L << ' ' << M << ' ' << R << endl;\n                for(int i = 0; i < nums.size(); i++){\n                    if(tmpsum + nums[i] <= M){\n                        tmpsum += nums[i];\n                    }else{\n                        cout << \"The nums[i] is \" << nums[i] << \" , and cnt += 1!\\n\";\n                        cnt += 1;\n                        tmpsum = nums[i];\n                    }\n                }\n                if(tmpsum > 0) cnt += 1;\n                cout << \"The result cnt is \" << cnt << endl;\n                if(cnt > m) L = M + 1;\n                else R = M;\n            }\n            int ans = L + R >> 1;\n            return ans;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"split-array-largest-sum","has_notes":false,"flag_type":1}