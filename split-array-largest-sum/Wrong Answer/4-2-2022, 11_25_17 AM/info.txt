{"id":671963615,"question_id":410,"lang":"cpp","lang_name":"C++","time":"1 year, 11 months","timestamp":1648869917,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/671963615/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"N/A","code":"class Solution {\npublic:\n    int splitArray(vector<int>& nums, int m) {\n        int L = -1, R = 1e9;\n        for(auto i: nums) L = max(L, i);\n        while(L < R){\n            int M = L + R >> 1, cnt = 0, tmpsum = 0;\n            for(int i = 0; i < nums.size(); i++){\n                if(tmpsum + nums[i] <= M){\n                    tmpsum += nums[i];\n                }else{\n                    cnt += 1;\n                    tmpsum = nums[i];\n                }\n            }\n            if(tmpsum > 0) cnt += 1;\n            if(cnt > m) L = M + 1;\n            else R = M - 1;\n        }\n        int ans = L + R >> 1;\n        return ans;\n    }\n};","compare_result":"100100010001001011101001111000","title_slug":"split-array-largest-sum","has_notes":false,"flag_type":1}