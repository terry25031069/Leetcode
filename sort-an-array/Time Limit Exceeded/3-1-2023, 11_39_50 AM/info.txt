{"id":906867939,"question_id":948,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1677641990,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/906867939/","is_pending":"Not Pending","title":"Sort an Array","memory":"N/A","code":"class Solution {\npublic:\n    int partition(vector<int>& arr, int start, int end){\n        int r = rand() % (end - start + 1);\n        int pivot = arr[r + start], cnt = 0;\n        for(int i = start; i <= end; i++) if(arr[i] <= pivot) cnt++;\n        int pivotidx = start + cnt - 1;\n        swap(arr[r + start], arr[pivotidx]);\n        int i = start, j = end;\n        while(i < pivotidx && pivotidx < j){\n            while(arr[i] <= pivot) i++;\n            while(arr[j] > pivot) j--;\n            if(i < pivotidx && j > pivotidx) swap(arr[i++], arr[j--]);\n        }\n        return pivotidx;\n    }\n\n    void quickSort(vector<int>& arr, int start, int end){\n        if(start >= end) return;\n        int p = partition(arr, start, end);\n        quickSort(arr, start, p-1);\n        quickSort(arr, p+1, end);\n    }\n\n    vector<int> sortArray(vector<int>& nums) {\n        quickSort(nums, 0, nums.size() - 1);\n        return nums;\n    }\n};","compare_result":"1111111111111111100","title_slug":"sort-an-array","has_notes":false,"flag_type":1}