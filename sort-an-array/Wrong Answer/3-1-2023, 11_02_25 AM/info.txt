{"id":906852668,"question_id":948,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1677639745,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/906852668/","is_pending":"Not Pending","title":"Sort an Array","memory":"N/A","code":"class Solution {\npublic:\n    int choosePivot(vector<int>& arr, int start, int end){\n        int mid = (start + end) / 2;\n        if (arr[start] > arr[end]) swap(arr[start], arr[end]);\n        if (arr[mid] < arr[start]) swap(arr[mid], arr[start]);\n        if (arr[end] < arr[mid]) swap(arr[end], arr[mid]);\n        return mid;\n    }\n\n    int partition(vector<int>& arr, int start, int end){\n        int r = choosePivot(arr, start, end);\n        int pivot = arr[r], cnt = 0;\n        for(int i = start; i < r; i++) {\n            if(arr[i] <= pivot) cnt++;\n        }\n        int pivotidx = start + cnt;\n        swap(arr[r], arr[pivotidx]);\n        int i = start, j = end;\n        while(i < pivotidx && pivotidx < j){\n            while(arr[i] < pivot) i++;\n            while(arr[j] >= pivot) j--;\n            if(i < pivotidx && j > pivotidx) swap(arr[i++], arr[j--]);\n        }\n        return pivotidx;\n    }\n\n    void quickSort(vector<int>& arr, int start, int end){\n        if(start >= end) return;\n        int p = partition(arr, start, end);\n        quickSort(arr, start, p-1);\n        quickSort(arr, p+1, end);\n    }\n\n\n    vector<int> sortArray(vector<int>& nums) {\n        quickSort(nums, 0, nums.size() - 1);\n        return nums;\n    }\n};","compare_result":"1111100100010000000","title_slug":"sort-an-array","has_notes":false,"flag_type":1}