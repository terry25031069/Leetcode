{"id":877750407,"question_id":1058,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1673659640,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/877750407/","is_pending":"Not Pending","title":"Lexicographically Smallest Equivalent String","memory":"N/A","code":"class Solution {\npublic:\n    int p[26] = {};\n    int find(int n){\n        return p[n] == n? n: p[n] = find(p[n]);\n    }\n    string smallestEquivalentString(string s1, string s2, string bs) {\n        for(int i = 0; i < 26; i++) p[i] = i;\n        for(int i = 0; i < s1.size(); i++){\n            if(s1[i] < s2[i]){\n                p[find(s2[i] - 'a')] = p[find(s1[i] - 'a')];\n            }else p[find(s1[i] - 'a')] = p[find(s2[i] - 'a')];\n        }\n        for(int i = 0; i < bs.size(); i++){\n            bs[i] = find(bs[i] -'a') + 'a';\n        }\n        return bs;\n    }\n};","compare_result":"11111111111111111000110010110000000100110110000000000010000100011011001100000000000001001111110000001000000000000001","title_slug":"lexicographically-smallest-equivalent-string","has_notes":false,"flag_type":1}