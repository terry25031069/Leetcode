{"id":920774709,"question_id":784,"lang":"cpp","lang_name":"C++","time":"11 months, 3 weeks","timestamp":1679584017,"status":10,"status_display":"Accepted","runtime":"114 ms","url":"/submissions/detail/920774709/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"56.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        if(!root) return new TreeNode(val);\n        auto ans = root;\n        while(root){\n            if(root->val > val){\n                if(root->left) root = root->left;\n                else {root->left = new TreeNode(val); return ans;}\n            }\n            else{\n                if(root->right) root = root->right;\n                else {root->right = new TreeNode(val); return ans;}\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree","has_notes":false,"flag_type":1}