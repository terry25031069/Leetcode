{"id":877792940,"question_id":101,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1673668919,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/877792940/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool mirror(TreeNode* a, TreeNode* b){\n        if(!a && !b) return true;\n        if(a && b && a->val == b->val){\n            return mirror(a->left, b->right) && mirror(a->right, b->left);\n        }\n        return false;\n    }\n    bool isSymmetric(TreeNode* root) {\n        return mirror(root, root);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}