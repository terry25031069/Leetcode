{"id":828538181,"question_id":36,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1666519210,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/828538181/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"N/A","code":"class Solution {\npublic:\n    bool isValidSudoku(vector<vector<char>>& board) {\n        for(int i = 0; i < 9; i++){\n            int checkrow[10] = {}, checkcol[10] = {};\n            for(int j = 0; j < 9; j++){  \n                if(board[i][j] != '.')checkrow[board[i][j] - '0']++;\n                if(board[j][i] != '.')checkcol[board[j][i] - '0']++;\n            }\n            for(int j = 1; j < 10; j++){\n                if(checkrow[j] > 1 || checkcol[j] > 1) return false;\n            }\n        }\n        for(int cnt = 0; cnt < 9; cnt++){\n            int basrow = (cnt / 3) * 3 + 1, bascol = (cnt % 3) * 3 + 1;\n            int check[10] = {};\n            for(int i = -1; i < 2; i++){\n                for(int j = -1; j < 2; j++){\n                    if(i - j){\n                        if(board[basrow + i][bascol + j] != '.')check[board[basrow + i][bascol + j] - '0']++;\n                    }\n                }\n            }\n            for(int i = 1; i < 10; i++){\n                if(check[i] > 1) return false;\n            }\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111110111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111011111111110110111111111111111111111111111011111111111111111111111111111111111111111111111111011111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111011111111111111111111111111111111111111111111111111101111111111111111111110111111111111111111011111111111111111111111111111111111111111111111111111111111","title_slug":"valid-sudoku","has_notes":false,"flag_type":1}