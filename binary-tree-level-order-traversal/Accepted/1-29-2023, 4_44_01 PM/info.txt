{"id":887360811,"question_id":102,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1674981841,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/887360811/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>> ans;\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n            vector<int> lyr;\n            for(int k = q.size(); k--;){\n                auto t = q.front(); q.pop(); \n                if(t){lyr.push_back(t->val);\n                if(t->left) q.push(t->left);\n                if(t->right) q.push(t->right);}\n            }\n            if(lyr.size())ans.push_back(lyr);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}