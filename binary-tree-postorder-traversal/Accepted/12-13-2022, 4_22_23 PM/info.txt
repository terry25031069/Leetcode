{"id":859062073,"question_id":145,"lang":"cpp","lang_name":"C++","time":"1 year, 3 months","timestamp":1670919743,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/859062073/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"9.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> postorderTraversal(TreeNode* root) {\n        vector<int> ans, l, r;\n        if(!root) return ans;\n        if(root->left) l = postorderTraversal(root->left);\n        if(root->right) r = postorderTraversal(root->right);\n        ans.insert(ans.end(), l.begin(), l.end());\n        ans.insert(ans.end(), r.begin(), r.end());\n        ans.push_back(root->val);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}