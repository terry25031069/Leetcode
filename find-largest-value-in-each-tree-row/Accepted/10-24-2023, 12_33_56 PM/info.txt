{"id":1082692985,"question_id":515,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1698122036,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1082692985/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"22.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> ans;\n    void dfs(TreeNode* root, int depth){\n        if(root){\n            if(ans.size() == depth) ans.push_back(root->val);\n            ans[depth] = max(ans[depth], root->val);\n            dfs(root->left, depth + 1);\n            dfs(root->right, depth + 1);\n        }\n    }\n    vector<int> largestValues(TreeNode* root) {\n        dfs(root, 0);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-largest-value-in-each-tree-row","has_notes":false,"flag_type":1}