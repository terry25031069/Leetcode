{"id":922367684,"question_id":2439,"lang":"cpp","lang_name":"C++","time":"11 months, 3 weeks","timestamp":1679826577,"status":10,"status_display":"Accepted","runtime":"191 ms","url":"/submissions/detail/922367684/","is_pending":"Not Pending","title":"Longest Cycle in a Graph","memory":"95.9 MB","code":"class Solution {\npublic:\n    vector<int> indeg, visit;\n    int bfs(int v, vector<int>& edges){\n        int step = 0;\n        while(1){\n            if(visit[v]) return step;\n            visit[v] = 1, v = edges[v];\n            step++;\n        }\n        return -1;\n    }\n    int longestCycle(vector<int>& edges) {\n        int ans = 0;\n        int n = edges.size();\n        indeg.resize(n, 0), visit.resize(n, 0);\n        queue<int> q;\n        for(int e: edges) if(e != -1) indeg[e]++;\n        for(int i = 0; i < n; i++){\n            if(!indeg[i]) q.push(i);\n        }\n        while(!q.empty()){\n            int e = edges[q.front()]; q.pop();\n            if(e == -1) continue;\n            indeg[e]--;\n            if(!indeg[e]) q.push(e);\n        }\n        if(*max_element(indeg.begin(), indeg.end()) == 0) return -1;\n        for(int i = 0; i < n; i++){\n            if(!indeg[i] || visit[i]) continue;\n            int tmp = bfs(i, edges);\n            ans = max(ans, tmp);\n        }\n        \n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-cycle-in-a-graph","has_notes":false,"flag_type":1}