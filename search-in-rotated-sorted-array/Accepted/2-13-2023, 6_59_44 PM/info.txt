{"id":897120057,"question_id":33,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1676285984,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/897120057/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"11 MB","code":"class Solution {\npublic:\n    int bi_search(vector<int>& nums, int target){\n        int l = 0, r = nums.size() - 1;\n        while(l <= r){\n            int m = (l + r) / 2;\n            if(nums[m] == target) return m;\n            else if(nums[m]>=nums[l]){\n                if(nums[m] >= target && nums[l]<= target) r = m - 1;\n                else l = m + 1;\n            }\n            else{\n                if(nums[m] <= target && nums[r]>= target) l = m + 1;\n                else r = m - 1;\n\n            }\n        }\n        return -1;\n    }\n    int search(vector<int>& nums, int target) {\n        return bi_search(nums, target);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array","has_notes":false,"flag_type":1}