{"id":909417414,"question_id":2646,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1678002606,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/909417414/","is_pending":"Not Pending","title":"Kth Largest Sum in a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int64_t> sum;\n    void dfs(TreeNode* root, int lvl){\n        if(sum.size() <= lvl) sum.push_back(0);\n        if(root){\n            sum[lvl] += root->val;\n            dfs(root->left, lvl+1);\n            dfs(root->right, lvl+1);\n        }\n    }\n    long long kthLargestLevelSum(TreeNode* root, int k) {\n        dfs(root, 0);\n        priority_queue<int> q;\n        for(int i: sum) q.push(i);\n        k--;\n        while(k--) q.pop();\n        return q.top();\n    }\n}; ","compare_result":"111110011111111101111111111010100100101111110","title_slug":"kth-largest-sum-in-a-binary-tree","has_notes":false,"flag_type":1}