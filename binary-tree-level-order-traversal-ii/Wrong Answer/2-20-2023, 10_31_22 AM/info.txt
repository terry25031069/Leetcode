{"id":901278117,"question_id":107,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1676860282,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/901278117/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>>ans;\n    void dfs(TreeNode* root, int lvl){\n        if(root){\n            if(ans.size() <= lvl) ans.push_back({});\n            ans.back().push_back(root->val);\n            dfs(root->left, lvl+1);\n            dfs(root->right, lvl+1);\n        }\n    }\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n        dfs(root, 0);\n        reverse(ans.begin(), ans.end());\n        return ans;    \n    }\n};","compare_result":"1111110011000000000010000001000001","title_slug":"binary-tree-level-order-traversal-ii","has_notes":false,"flag_type":1}