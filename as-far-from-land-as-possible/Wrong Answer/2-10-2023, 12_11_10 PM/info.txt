{"id":895104824,"question_id":1117,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1676002270,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/895104824/","is_pending":"Not Pending","title":"As Far from Land as Possible","memory":"N/A","code":"class Solution {\npublic:\n    int maxDistance(vector<vector<int>>& grid) {\n        int n = grid.size();\n        using pii = pair<int, int>;\n        vector<vector<int>> dis(n, vector<int>(n, 1e6));\n        queue<pii> q; \n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < n; j++){\n                if(grid[i][j]){\n                    q.push({i, j});\n                    dis[i][j] = 0;\n                }\n            }\n        }\n        int dx[4] = {0, 1, 0, -1};\n        int dy[4] = {1, 0, -1, 0};\n        while(!q.empty()){\n            pii t = q.front(); q.pop();\n            int x = t.first, y = t.second;\n            for(int k = 0; k < 4; k++){\n                if(x + dx[k] > -1 && x + dx[k] < n && \n                   y + dy[k] > -1 && y + dy[k] < n && \n                   dis[x + dx[k]][y + dy[k]] > dis[x][y] + 1){\n                    dis[x + dx[k]][y + dy[k]] = dis[x][y] + 1;\n                    q.push({x + dx[k], y + dy[k]});\n                }\n            }\n        }\n        vector<int> tmp;\n        for(auto v: dis) tmp.push_back(*max_element(v.begin(), v.end()));\n        int ans = *max_element(tmp.begin(), tmp.end());\n        if(ans == 1e6) return -1;\n        return ans;\n    }\n};","compare_result":"1110111111111111111111111111111111111","title_slug":"as-far-from-land-as-possible","has_notes":false,"flag_type":1}