{"id":1189306977,"question_id":513,"lang":"cpp","lang_name":"C++","time":"1 week, 5 days","timestamp":1709179655,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1189306977/","is_pending":"Not Pending","title":"Find Bottom Left Tree Value","memory":"20.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans = 0, d = -1;\n    void dfs(auto* root, int depth){\n        if(!root) return;\n        if(depth > d) ans = root->val, d = depth;\n        dfs(root->left, depth + 1);\n        dfs(root->right, depth + 1);\n    }\n    int findBottomLeftValue(TreeNode* root) {\n        dfs(root, 0);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-bottom-left-tree-value","has_notes":false,"flag_type":1}