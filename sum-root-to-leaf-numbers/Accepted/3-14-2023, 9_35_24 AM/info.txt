{"id":914716408,"question_id":129,"lang":"cpp","lang_name":"C++","time":"12Â months","timestamp":1678757724,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/914716408/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"9.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans = 0;\n    void dfs(TreeNode* root, string s){\n        if(!root->left && !root->right){\n            s += char(root->val + '0');\n            ans += stoi(s);\n        }\n        else{\n            if(root->left) dfs(root->left, s + char(root->val + '0'));\n            if(root->right) dfs(root->right, s + char(root->val + '0'));\n        }\n    }\n    int sumNumbers(TreeNode* root) {\n        dfs(root, \"\");\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-root-to-leaf-numbers","has_notes":false,"flag_type":1}