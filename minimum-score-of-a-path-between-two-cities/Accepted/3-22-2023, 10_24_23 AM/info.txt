{"id":919851437,"question_id":2582,"lang":"cpp","lang_name":"C++","time":"11 months, 3 weeks","timestamp":1679451863,"status":10,"status_display":"Accepted","runtime":"726 ms","url":"/submissions/detail/919851437/","is_pending":"Not Pending","title":"Minimum Score of a Path Between Two Cities","memory":"192.6 MB","code":"class Solution {\npublic:\n    int minScore(int n, vector<vector<int>>& roads) {\n        unordered_map<int, unordered_map<int, int>> graph;\n        for (auto& road : roads) {\n            int u = road[0], v = road[1], w = road[2];\n            graph[u][v] = graph[v][u] = w;\n        }\n        \n        int res = numeric_limits<int>::max();\n        unordered_set<int> visited;\n        queue<int> q;\n        q.push(1);\n\n        while (!q.empty()) {\n            int node = q.front();\n            q.pop();\n            for (auto& [adj, score] : graph[node]) {\n                if (!visited.count(adj)) {\n                    q.push(adj);\n                    visited.insert(adj);\n                }\n                res = min(res, score);\n            }\n        }\n        \n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"minimum-score-of-a-path-between-two-cities","has_notes":false,"flag_type":1}