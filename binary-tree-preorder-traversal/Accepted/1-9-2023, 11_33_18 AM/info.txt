{"id":874460166,"question_id":144,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1673235198,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/874460166/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"10.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode* root) {\n        vector<int>ans, left, right;\n        if(!root) return ans;\n        ans.push_back(root->val);\n        if(root->left) left = preorderTraversal(root->left);\n        if(root->right) right = preorderTraversal(root->right);\n        if(left.size()) ans.insert(ans.end(), left.begin(), left.end());\n        if(right.size()) ans.insert(ans.end(), right.begin(), right.end());\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false,"flag_type":1}