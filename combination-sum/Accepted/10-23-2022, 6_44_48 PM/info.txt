{"id":828555413,"question_id":39,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1666521888,"status":10,"status_display":"Accepted","runtime":"123 ms","url":"/submissions/detail/828555413/","is_pending":"Not Pending","title":"Combination Sum","memory":"26.3 MB","code":"class Solution {\npublic:\n    vector<vector<int>> ans{};\n    void dfs(vector<int>& candidates, int bas, int target, vector<int>tmp){\n        if(target == 0){\n            ans.push_back(tmp);\n            return;\n        }\n        if(target < 0 || bas == candidates.size()) return;  \n        dfs(candidates, bas + 1, target, tmp);\n        int currentNum = candidates[bas];\n        for(int i = 1; i * currentNum <= target; i++){\n            tmp.push_back(currentNum);\n            for(int i = 0; i < tmp.size(); i++) cout << tmp[i] << \" \\n\"[i == tmp.size() - 1];\n            dfs(candidates, bas + 1, target - i * currentNum, tmp);\n        }\n    }\n    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {\n        vector<int>tmp{};\n        dfs(candidates, 0, target, tmp);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}