{"id":1191287993,"question_id":459,"lang":"cpp","lang_name":"C++","time":"1 week, 3 days","timestamp":1709364101,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/1191287993/","is_pending":"Not Pending","title":"Repeated Substring Pattern","memory":"13.9 MB","code":"class Solution {\npublic:\n    bool repeatedSubstringPattern(string s) {\n        int n = s.size(), i = 1, prev = 0; \n        vector<int> lps(n, 0);\n        while(i < n){\n            if(s[i] == s[prev]){\n                lps[i] = prev + 1, i++, prev++;\n            }else if(prev == 0){\n                lps[i] = 0, i++;\n            }else{\n                prev = lps[prev - 1];\n            }\n        }\n        int patternLen = n - lps.back();\n        if(patternLen == n) return false;\n        if(n % patternLen) return false;\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"repeated-substring-pattern","has_notes":false,"flag_type":1}