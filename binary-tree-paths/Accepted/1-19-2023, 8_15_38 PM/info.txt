{"id":881173872,"question_id":257,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1674130538,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/881173872/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"13.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<string> binaryTreePaths(TreeNode* root) {\n        vector<string> ans;\n        if(root){\n            string s = \"\"; s += to_string(root->val);\n            auto l = binaryTreePaths(root->left);\n            auto r = binaryTreePaths(root->right);\n            if(l.size() + r.size() == 0) return {s};\n            for(auto tmps: l) ans.push_back(s + \"->\" + tmps);\n            for(auto tmps: r) ans.push_back(s + \"->\" + tmps);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths","has_notes":false,"flag_type":1}