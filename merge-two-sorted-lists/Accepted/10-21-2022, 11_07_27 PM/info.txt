{"id":827369469,"question_id":21,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1666364847,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/827369469/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        ListNode* init = new ListNode(0), *tmp;\n        tmp = init;\n        while(list1 && list2){\n            ListNode* newNode;\n            if(list1->val < list2->val){\n                cout << list1->val << ' ';\n                newNode = new ListNode(list1->val);\n                list1 = list1->next;\n            }\n            else{\n                cout << list2->val << ' ';\n                newNode = new ListNode(list2->val);\n                list2 = list2->next;\n            }\n            tmp->next = newNode, tmp = tmp->next;\n        }\n        while(!list1 && list2){\n            cout << list2->val << ' ';\n            tmp->next = new ListNode(list2->val), list2 = list2->next, tmp = tmp->next;\n        }\n        while(list1 && !list2){\n            cout << list1->val << ' ';\n            tmp->next = new ListNode(list1->val), list1 = list1->next, tmp = tmp->next;\n        }\n        cout << endl;\n        return init->next;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}