{"id":928860241,"question_id":1380,"lang":"cpp","lang_name":"C++","time":"11 months, 1 week","timestamp":1680758248,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/928860241/","is_pending":"Not Pending","title":"Number of Closed Islands","memory":"9.5 MB","code":"class Solution {\npublic:\n    int n, m;\n    int dx[4] = {0, 1, 0, -1}, dy[4] = {1, 0, -1, 0};\n    int dfs(int i, int j, vector<vector<int>>& grid){\n        if(i < 0 || j < 0 || i > n-1 || j > m-1) return false;\n        if(grid[i][j]) return true;\n        grid[i][j] = 1;\n        int ans = 1;\n        for(int k = 0; k < 4; k++){\n            ans &= dfs(i + dx[k], j + dy[k], grid);\n        }\n        return ans;\n    }\n    int closedIsland(vector<vector<int>>& grid) {\n        int ans = 0;\n        n = grid.size(), m = grid[0].size();\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < m; j++){\n                if(!grid[i][j] && dfs(i, j, grid)){\n                    ans++;\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"number-of-closed-islands","has_notes":true,"flag_type":1}