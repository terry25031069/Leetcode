{"id":839339699,"question_id":94,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1667902619,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/839339699/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> ans;\n    void DFS(TreeNode* root){\n        if(!root) return;\n        if(root->left) DFS(root->left);\n        ans.emplace_back(root->val);\n        cout << root->val << ' ';\n        if(root->right) DFS(root->right);\n        cout << endl;\n    }\n    vector<int> inorderTraversal(TreeNode* root) {\n        DFS(root);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}