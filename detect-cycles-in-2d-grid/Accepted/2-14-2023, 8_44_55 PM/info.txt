{"id":897834298,"question_id":1663,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1676378695,"status":10,"status_display":"Accepted","runtime":"283 ms","url":"/submissions/detail/897834298/","is_pending":"Not Pending","title":"Detect Cycles in 2D Grid","memory":"62.5 MB","code":"class Solution {\npublic:\n    vector<vector<bool>> visit;\n    bool dfs(int pi, int pj, int i, int j, vector<vector<char>>& grid){\n        visit[i][j] = 1; \n        int dx[4] = {0, -1, 0, 1}, dy[4] = {1, 0, -1, 0};\n        bool ans = 0;\n        for(int k = 0; k < 4; k++){\n            if(i + dx[k] > -1 && i + dx[k] < grid.size() &&\n               j + dy[k] > -1 && j + dy[k] < grid[0].size() && \n               !(i + dx[k] == pi && j + dy[k] == pj) && \n               grid[i][j] == grid[i + dx[k]][j + dy[k]]){\n                   if(visit[i+dx[k]][j+dy[k]]) return true;\n                   else{\n                       ans |= dfs(i, j, i+dx[k], j+dy[k], grid);\n                   }\n               }\n        }\n        return ans;\n    }\n    bool containsCycle(vector<vector<char>>& grid) {\n        visit.resize(grid.size(), vector<bool>(grid[0].size(), 0));\n        for(int i = 0; i < grid.size(); i++){\n            for(int j = 0; j < grid[0].size(); j++){\n                if(visit[i][j] == 0){\n                    bool tmp = dfs(i, j, i, j, grid);\n                    if(tmp) return true;\n                }\n            }\n        }    \n        return false;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"detect-cycles-in-2d-grid","has_notes":false,"flag_type":1}