{"id":892475829,"question_id":110,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1675666198,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/892475829/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"21 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int depth(TreeNode* root){\n        if(root){\n            return max(depth(root->left), depth(root->right)) + 1;\n        }else return 0;\n    }\n    bool isBalanced(TreeNode* root) {\n        if(root){\n            if(abs(depth(root->right) - depth(root->left)) < 2){\n                return isBalanced(root->right) && isBalanced(root->left);\n            }\n            return false;\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}