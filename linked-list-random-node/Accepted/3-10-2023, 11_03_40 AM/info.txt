{"id":912427959,"question_id":382,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1678417420,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/912427959/","is_pending":"Not Pending","title":"Linked List Random Node","memory":"16.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int a[10001] = {}, idx = 0;\n    Solution(ListNode* head) {\n        while(head) a[idx++] = head->val, head = head->next;\n    }\n    \n    int getRandom() {\n        int r = rand() % idx;\n        return a[r];\n    }\n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(head);\n * int param_1 = obj->getRandom();\n */","compare_result":"11111111","title_slug":"linked-list-random-node","has_notes":false,"flag_type":1}