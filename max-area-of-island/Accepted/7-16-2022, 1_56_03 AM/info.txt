{"id":747955223,"question_id":695,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1657907763,"status":10,"status_display":"Accepted","runtime":"51 ms","url":"/submissions/detail/747955223/","is_pending":"Not Pending","title":"Max Area of Island","memory":"23.3 MB","code":"class Solution {\npublic:\n    int dx[4] = {-1, 0, 1, 0};\n    int dy[4] = {0, 1, 0, -1};\n    int dfs(vector<vector<int>>& grid, int x, int y) {\n        int area = 1; \n        grid[x][y] = 0;\n        for(int k = 0; k < 4; k++){\n            if(x + dx[k] >= 0 && x + dx[k] < grid.size() \n              && y + dy[k] >= 0 && y + dy[k] < grid[0].size() && grid[x+dx[k]][y+dy[k]] == 1)\n            area += dfs(grid, x + dx[k], y + dy[k]);\n        }\n        return area;\n    }\n    \n    int maxAreaOfIsland(vector<vector<int>>& grid) {\n        int ma = 0;\n        for(int i = 0; i < grid.size(); i++){\n            for(int j = 0; j < grid[i].size(); j++){\n                if(grid[i][j] == 1){\n                    int area = dfs(grid, i, j);\n                    cout << i << ' ' << j << ' ' << area << endl;\n                    if(area > ma) ma = area;\n                }\n            }\n        }\n        return ma;\n    }\n};","compare_resulttitle_slug":"max-area-of-island","has_notes":false,"flag_type":1}