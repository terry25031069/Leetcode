{"id":906314205,"question_id":419,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1677563439,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/906314205/","is_pending":"Not Pending","title":"Battleships in a Board","memory":"8.1 MB","code":"class Solution {\npublic:\n    int dx[4] = {0, 1, 0, -1}, dy[4] = {1, 0, -1, 0};\n    void dfs(int x, int y, vector<vector<char>>& board){\n        board[x][y] = '.';\n        for(int k = 0; k < 4; k++){\n            int tx = x + dx[k], ty = y + dy[k];\n            if(tx > -1 && tx < board.size() && ty > -1 && ty < board[0].size() && board[tx][ty] == 'X'){\n                dfs(tx, ty, board);\n            }\n        }\n    }\n    int countBattleships(vector<vector<char>>& board) {\n        int ans = 0;\n        for(int i = 0; i < board.size(); i++){\n            for(int j = 0; j < board[0].size(); j++){\n                if(board[i][j] == 'X') dfs(i, j, board), ans++;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"battleships-in-a-board","has_notes":false,"flag_type":1}