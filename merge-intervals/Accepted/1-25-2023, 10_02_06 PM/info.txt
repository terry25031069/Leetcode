{"id":885036470,"question_id":56,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1674655326,"status":10,"status_display":"Accepted","runtime":"69 ms","url":"/submissions/detail/885036470/","is_pending":"Not Pending","title":"Merge Intervals","memory":"19.1 MB","code":"class Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& ivl) {\n        vector<vector<int>> ans;\n        ivl.push_back({1000000, 1000000});\n        sort(ivl.begin(), ivl.end());\n        int l = ivl[0][0], r = ivl[0][1];\n        for(int i = 1; i < ivl.size(); i++){\n            if(ivl[i][0] <= r && ivl[i][1] >= r) r = ivl[i][1];\n            else if(ivl[i][0] > r){\n                ans.push_back({l, r});\n                l = ivl[i][0], r = ivl[i][1];\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}