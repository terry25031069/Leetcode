{"id":888122160,"question_id":593,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1675087461,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/888122160/","is_pending":"Not Pending","title":"Valid Square","memory":"27.5 MB","code":"class Solution {\npublic:\n    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {\n        ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n        vector<vector<int>> f; f.resize(4);\n        f[0] = {p1[0], p1[1]}, f[1] = {p2[0], p2[1]}, f[2] = {p3[0], p3[1]},f[3] = {p4[0], p4[1]};\n        double xm, ym;\n        for(auto v: f){\n            xm += v[0], ym += v[1];\n        }\n        xm /= 4, ym /= 4;\n        sort(f.begin(), f.end(), [xm, ym](vector<int>a, vector<int>b){\n            return atan2(a[0] - xm, a[1] - ym) < atan2(b[0] - xm, b[1] - ym);});\n        auto dis0 = hypot(f[0][0] - f[1][0], f[0][1] - f[1][1]);\n        if(abs(dis0) < 1e-6) return false;\n        auto dis1 = hypot(f[0][0] - f[2][0], f[0][1] - f[2][1]);\n        for(int i = 1; i < 3; i++){\n            if(dis0 != hypot(f[i][0] - f[i + 1][0], f[i][1] - f[i+1][1])) return false;\n        }\n        if(abs(dis1 - sqrt(2) * dis0) > 1e-6) return false;\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-square","has_notes":false,"flag_type":1}