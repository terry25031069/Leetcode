{"id":861381496,"question_id":93,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1671330637,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/861381496/","is_pending":"Not Pending","title":"Restore IP Addresses","memory":"24.7 MB","code":"class Solution {\npublic:\n    vector<string> ans;\n    void dfs(string s, int idx, int part, vector<string>tmp){\n        if(idx == s.size() && part == 4){\n            string subans = \"\";\n            for(int i = 0; i < tmp.size(); i++){\n                subans += tmp[i];\n                if(i < tmp.size() - 1) subans += \".\";\n            }\n            ans.push_back(subans);\n        }\n        for(int i = 0; i + idx < s.size() && i < 3; i++){\n            string ttmp = s.substr(idx, i + 1);\n            if(stoi(ttmp) < 256 && to_string(stoi(ttmp)) == ttmp){\n                tmp.push_back(ttmp);\n                dfs(s, idx + i + 1, part + 1, tmp);\n                tmp.pop_back();\n            }else{\n                break;\n            }\n        }\n    }\n    vector<string> restoreIpAddresses(string s) {\n        ans.clear();\n        dfs(s, 0, 0, {});\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"restore-ip-addresses","has_notes":false,"flag_type":1}