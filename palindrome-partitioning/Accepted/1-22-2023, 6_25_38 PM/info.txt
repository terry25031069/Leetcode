{"id":883006634,"question_id":131,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1674383138,"status":10,"status_display":"Accepted","runtime":"495 ms","url":"/submissions/detail/883006634/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"243 MB","code":"class Solution {\npublic:\n    vector<vector<string>> ans;\n    bool isPalin(string s){\n        string re = s;\n        reverse(re.begin(), re.end());\n        return re == s;\n    }\n    void dfs(int idx, string s, vector<string> tmp){\n        if(idx == s.size()){\n            ans.push_back(tmp);\n        }else{\n            for(int i = idx + 1; i <= s.size(); i++){\n                if(isPalin(s.substr(idx, i - idx))){\n                    auto ttmp = tmp;\n                    ttmp.push_back(s.substr(idx, i - idx));\n                    dfs(i, s, ttmp);\n                }\n            }\n        }\n    }\n    vector<vector<string>> partition(string s) {\n        dfs(0, s, {});\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false,"flag_type":1}