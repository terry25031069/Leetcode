{"id":1201213838,"question_id":1267,"lang":"cpp","lang_name":"C++","time":"10 hours, 4 minutes","timestamp":1710221269,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1201213838/","is_pending":"Not Pending","title":"Remove Zero Sum Consecutive Nodes from Linked List","memory":"17.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool removeZeroSum(vector<int>& v){\n        vector<int> sum(v.size() + 1, 0);\n        int i, j;\n        for(i = 0; i < v.size(); i++){\n            for(j = 0; j <= i; j++){\n                sum[j] += v[i];\n                if(sum[j] == 0) goto yee;\n            }\n        }\n        yee:\n        if(i == v.size()) return false;\n        else{\n            //cout << \"Erase from \" << j << \" to \" << i << endl;\n            v.erase(v.begin() + j, v.begin() + i + 1);\n            return true;\n        }\n    }\n    ListNode* removeZeroSumSublists(ListNode* head) {\n        vector<int> v;\n        while(head){\n            if(head->val) v.push_back(head->val);\n            head = head->next;\n        }\n        bool chk = 1;\n        while(chk){\n            chk = removeZeroSum(v);\n        }\n        ListNode *tmp = new ListNode(0), *ans = tmp;\n        for(int num: v){\n            tmp->next = new ListNode(num);\n            tmp = tmp->next;\n        }\n        return ans->next;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-zero-sum-consecutive-nodes-from-linked-list","has_notes":false,"flag_type":1}