{"id":1187328367,"question_id":543,"lang":"cpp","lang_name":"C++","time":"2Â weeks","timestamp":1709006358,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1187328367/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"18.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxLength(TreeNode *root){\n        if(!root) return 0;\n        return 1 + max(maxLength(root->left), maxLength(root->right));\n    }\n    int diameterOfBinaryTree(TreeNode* root) {\n        if(!root) return 0;\n        int L = maxLength(root->left);\n        int R = maxLength(root->right);\n        int dL = diameterOfBinaryTree(root->left);\n        int dR = diameterOfBinaryTree(root->right);\n        return max(L + R, max(dL, dR));\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}