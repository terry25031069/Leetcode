{"id":867853169,"question_id":813,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1672371855,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/867853169/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"17.6 MB","code":"class Solution {\npublic:\n    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {\n        using piv = pair<int, vector<int>>;\n        vector<vector<int>> ans;\n        queue<piv> q; q.push({0, {0}});\n        while(!q.empty()){\n            auto top = q.front(); q.pop();\n            for(auto i: graph[top.first]){\n                auto ansUnit = top.second;\n                ansUnit.push_back(i);\n                if(i == graph.size() - 1){\n                    ans.push_back(ansUnit);\n                }else{\n                    q.push({i, ansUnit});\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"all-paths-from-source-to-target","has_notes":false,"flag_type":1}