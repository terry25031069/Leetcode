{"id":1173131806,"question_id":221,"lang":"python3","lang_name":"Python3","time":"4 weeks, 1 day","timestamp":1707739777,"status":10,"status_display":"Accepted","runtime":"3739 ms","url":"/submissions/detail/1173131806/","is_pending":"Not Pending","title":"Maximal Square","memory":"19 MB","code":"class Solution:\n    def maximalSquare(self, matrix: List[List[str]]) -> int:\n        ans = 1\n        m, n = len(matrix), len(matrix[0])\n\n        def checkMatrixWithLengthN(ans :int) -> bool:\n            count = 0\n            for p in range(m - ans + 1):\n                for q in range(n - ans + 1):\n                    for j in range(p, p + ans):\n                        for k in range(q, q + ans):\n                            if matrix[j][k] == '1':\n                                count += 1\n                            else: \n                                break\n                    if count == ans ** 2:\n                        return True\n                    count = 0\n            return False\n            \n        while 1:\n            chk = checkMatrixWithLengthN(ans)\n            if chk: \n                ans += 1\n            else: break\n        ans -= 1\n        return ans ** 2","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-square","has_notes":false,"flag_type":1}