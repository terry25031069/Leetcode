{"id":920777470,"question_id":141,"lang":"cpp","lang_name":"C++","time":"11 months, 3 weeks","timestamp":1679584328,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/920777470/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"7.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode *fast = head, *slow = head;\n        if(!head) return false;\n        while(fast && fast->next){\n            fast = fast->next->next; \n            slow = slow->next;\n            if(fast == slow) return true;\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}