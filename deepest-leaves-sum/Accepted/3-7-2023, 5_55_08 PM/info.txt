{"id":910750183,"question_id":1254,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1678182908,"status":10,"status_display":"Accepted","runtime":"119 ms","url":"/submissions/detail/910750183/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"59.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> v;\n    void dfs(TreeNode* root, int lvl){\n        if(root){\n            if(lvl >= v.size()) v.push_back(0);\n            v[lvl] += root->val;\n            dfs(root->left, lvl+1);\n            dfs(root->right, lvl+1);\n        }\n    }\n    int deepestLeavesSum(TreeNode* root) {\n        dfs(root, 0);\n        return v.back();\n    }\n}; ","compare_result":"111111111111111111111111111111111111111","title_slug":"deepest-leaves-sum","has_notes":false,"flag_type":1}