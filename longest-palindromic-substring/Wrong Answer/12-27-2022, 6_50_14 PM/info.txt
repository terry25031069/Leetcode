{"id":866293175,"question_id":5,"lang":"python3","lang_name":"Python3","time":"1 year, 2 months","timestamp":1672138214,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/866293175/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        ans, maxlen = \"\" , 0\n        if len(s) == 1: return s\n        if len(s) == 2:\n            if s[0] == s[1]: return s\n            return s[0]\n        for i in range(len(s)):\n            start, end = i, i\n            while 1:\n                if s[start: end + 1] == s[end:start -1 :-1]: \n                    if maxlen < end - start + 1:\n                        maxlen = end - start + 1\n                        ans = s[start: end + 1]\n                    if start < 0 or end == len(s): break\n                    else: \n                        start -= 1\n                        end += 1\n                else: break\n        for i in range(len(s)):\n            start, end = i, i + 1\n            while 1:\n                if s[start: end + 1] == s[end:start - 1:-1]: \n                    if maxlen < end - start + 1:\n                        maxlen = end - start + 1\n                        ans = s[start: end + 1]\n                    if start < 0 or end == len(s): break\n                    else: \n                        start -= 1\n                        end += 1\n                else: break\n        return ans\n            \n                    ","compare_result":"111110100001001110001111111001000011100011101011111111111111111111111111111110000000000000000000111101010101010101010101010100101010101011111","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}