{"id":892080347,"question_id":130,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1675610580,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/892080347/","is_pending":"Not Pending","title":"Surrounded Regions","memory":"N/A","code":"class Solution {\npublic:\n    map<int, int> m;\n    vector<vector<int>> point;\n    set<vector<int>> s;\n    bool dfs(int i, int j, vector<vector<char>>& board){\n        bool b = !(i == 0 || j == 0 || i == board.size() - 1 || j == board[0].size() - 1);\n        int dx[4] = {0, 1, 0, -1}, dy[4] = {1, 0, -1, 0};\n        for(int k = 0; k < 4; k++){\n            int tx = i + dx[k], ty = j + dy[k];\n            if(tx > -1 && tx < board.size() && ty > -1 && ty < board[0].size() \n            && board[tx][ty] == 'O' && s.find({tx, ty}) == s.end()){\n                b &= (!(tx == 0 || ty == 0 || tx == board.size() - 1 || ty == board[0].size() - 1));\n                point.push_back({tx, ty});\n                s.insert({tx, ty});\n                dfs(tx, ty, board);\n            }\n        }\n        return b;\n    }\n\n    void solve(vector<vector<char>>& board) {\n        for(int i = 0; i < board.size(); i++){\n            for(int j = 0; j < board[0].size(); j++){\n                if(board[i][j] == 'O'){\n                    s.clear(), s.insert({i, j}); point.clear(), point.push_back({i, j});\n                    bool b = dfs(i, j, board);\n                    for(auto v: point){\n                        board[v[0]][v[1]] = (b == 0 ? 'O' : 'X');\n                    }\n                }\n            }\n        }\n    }\n};","compare_result":"1111111111111101110100101100000110110101001001000100100001","title_slug":"surrounded-regions","has_notes":false,"flag_type":1}