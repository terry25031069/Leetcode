{"id":889815735,"question_id":990,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1675311031,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/889815735/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"12.8 MB","code":"class Solution {\npublic:\n    bool isAlienSorted(vector<string>& words, string order) {\n        auto tmp = words;\n        map<char, int> m;\n        for(int i = 0; i < order.size(); i++) m[order[i]] = i;\n        sort(tmp.begin(), tmp.end(), [&m](string a, string b){\n            for(int i = 0; i < min(a.size(), b.size()); i++){\n                if(a[i] != b[i]) return m[a[i]] < m[b[i]];\n            }\n            return a.size() < b.size();\n        });\n        return tmp == words;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary","has_notes":false,"flag_type":1}