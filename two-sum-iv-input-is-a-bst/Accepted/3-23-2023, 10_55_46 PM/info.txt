{"id":920768864,"question_id":653,"lang":"cpp","lang_name":"C++","time":"11 months, 3 weeks","timestamp":1679583346,"status":10,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/920768864/","is_pending":"Not Pending","title":"Two Sum IV - Input is a BST","memory":"36.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* Root;\n    bool search(TreeNode* root, int n, TreeNode* N){\n        if(root && root != N){\n            if(root->val == n) return true;\n            else if(root->val < n) return search(root->right, n, N);\n            else return search(root->left, n, N);\n        }\n        return false;\n    }\n    bool helper(TreeNode* root, int k){\n        if(root){\n            int ans = 0;\n            ans = search(Root, k - root->val, root) || helper(root->left, k) || helper(root->right, k);\n            if(ans) return true;\n        }\n        return false;\n    }\n    bool findTarget(TreeNode* root, int k) {\n        if(!root) return false;\n        Root = root;\n        return helper(root, k);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"two-sum-iv-input-is-a-bst","has_notes":false,"flag_type":1}