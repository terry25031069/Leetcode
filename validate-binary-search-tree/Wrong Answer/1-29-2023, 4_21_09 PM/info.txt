{"id":887351578,"question_id":98,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1674980469,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/887351578/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool BSTchk(TreeNode* grandpa, TreeNode *root, int dir){\n        if(root){\n            if(dir == 0){\n                if(root->left && root->left->val <= root->val) return false;\n                if(root->right && (root->right->val <= root->val \n                                || root->right->val >= grandpa->val)) return false;\n            }else{\n                if(root->right && root->right->val <= root->val) return false;\n                if(root->left && (root->left->val >= root->val \n                                || root->left->val <= grandpa->val)) return false;\n            }\n            return BSTchk(root, root->left, 0) && BSTchk(root, root->right, 1);\n        }\n        return true;\n    }\n    bool isValidBST(TreeNode* root) {\n        if(root){\n            if(root->left && root->left->val >= root->val) return false;\n            if(root->right && root->right->val <= root->val) return false;\n            return BSTchk(root, root->left, 0) && BSTchk(root, root->right, 1);\n        }\n        return true;\n    }\n};","compare_result":"1111111111111111101001111000011111011110110111111111101101110111111111111111111110","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}