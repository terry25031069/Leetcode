{"id":909635335,"question_id":2651,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1678032709,"status":10,"status_display":"Accepted","runtime":"334 ms","url":"/submissions/detail/909635335/","is_pending":"Not Pending","title":"Count Ways to Group Overlapping Ranges","memory":"72.6 MB","code":"class Solution {\npublic:\n    int countWays(vector<vector<int>>& ranges) {\n        int n = 1e9+7;\n        sort(ranges.begin(), ranges.end());\n        ranges.push_back({n, n});\n        // for(auto v: ranges){\n        //     for(auto ele: v) cout << ele << ' '; cout << endl;\n        // }\n        int g = 0;\n        for(int i = 0, l = ranges[0][0], r = ranges[0][1]; i < ranges.size(); i++){\n            if(ranges[i][0] <= r && ranges[i][1] > r) r = ranges[i][1];\n            else{\n                if(ranges[i][0] > r){\n                    g++;\n                    l = ranges[i][0], r = ranges[i][1];\n                }\n            }\n        }\n        long long ans = 1, bas = 2;\n        while(g){\n            if(g & 1) ans *= bas, ans %= n;\n            g >>= 1, bas = bas * bas % n;\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"count-ways-to-group-overlapping-ranges","has_notes":false,"flag_type":1}