{"id":929396014,"question_id":1073,"lang":"cpp","lang_name":"C++","time":"11 months, 1 week","timestamp":1680842136,"status":10,"status_display":"Accepted","runtime":"95 ms","url":"/submissions/detail/929396014/","is_pending":"Not Pending","title":"Number of Enclaves","memory":"29.2 MB","code":"class Solution {\npublic:\n    int m, n, ans = 0, cnt = 0;\n    int dx[4] = {0, -1, 0, 1}, dy[4] = {1, 0, -1, 0};\n    bool dfs(int i, int j, vector<vector<int>>& grid){\n        if(i < 0 || j < 0 || i >= n || j >= m) return false;\n        if(!grid[i][j]) return true;\n        grid[i][j] = 0, cnt++;\n        bool ans = 1;\n        for(int k = 0; k < 4; k++){\n            bool res = dfs(i + dx[k], j + dy[k], grid);\n            ans &= res;\n        }\n        return ans;\n    }\n    int numEnclaves(vector<vector<int>>& grid) {\n        n = grid.size(), m = grid[0].size();\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < m; j++){\n                if(grid[i][j]){\n                    cnt = 0;\n                    bool tmp = dfs(i, j, grid);\n                    if(tmp) ans += cnt;\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-enclaves","has_notes":false,"flag_type":1}