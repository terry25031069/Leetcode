{"id":857941495,"question_id":1465,"lang":"cpp","lang_name":"C++","time":"1 year, 3 months","timestamp":1670734375,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/857941495/","is_pending":"Not Pending","title":"Maximum Product of Splitted Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    map<TreeNode*, int> sum;\n    int dfs(TreeNode* root){\n        sum[root] = dfs(sum)\n    }\n    int maxProduct(TreeNode* root) {\n        dfs(root);\n\n    }\n};","compare_result":null,"title_slug":"maximum-product-of-splitted-binary-tree","has_notes":false,"flag_type":1}