{"id":889356734,"question_id":1748,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1675250077,"status":10,"status_display":"Accepted","runtime":"182 ms","url":"/submissions/detail/889356734/","is_pending":"Not Pending","title":"Best Team With No Conflicts","memory":"19.8 MB","code":"class Solution {\npublic:\n    struct p{\n        int score, age;\n        p(int score, int age): score(score), age(age){};\n    };\n    int bestTeamScore(vector<int>& scores, vector<int>& ages) {\n        vector<p> people;\n        for(int i = 0; i < scores.size(); i++){\n            people.push_back(p(scores[i], ages[i]));\n        }\n        sort(people.begin(), people.end(), [](p a, p b){\n            if(a.age != b.age) return a.age < b.age;\n            return a.score < b.score;\n        });\n        int ans = 0;\n        vector<int> dp(people.size() + 1, 0);\n        for(int i = 0; i < people.size(); i++){\n            dp[i] = people[i].score;\n            for(int j = 0; j < i; j++){\n                if(people[i].score >= people[j].score){\n                    dp[i] = max(dp[j] + people[i].score, dp[i]);\n                }\n            }\n        }\n        return *max_element(dp.begin(), dp.end());\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"best-team-with-no-conflicts","has_notes":false,"flag_type":1}