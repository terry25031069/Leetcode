{"id":896033047,"question_id":1229,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1676135047,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/896033047/","is_pending":"Not Pending","title":"Shortest Path with Alternating Colors","memory":"15.2 MB","code":"class Solution {\npublic:\n    using pii = pair<int, int>;\n    vector<int> shortestAlternatingPaths(int n, vector<vector<int>>& redEdges, vector<vector<int>>& blueEdges) {\n        vector<vector<int>> re(n), be(n);\n        for(auto v: redEdges) re[v[0]].push_back(v[1]);\n        for(auto v: blueEdges) be[v[0]].push_back(v[1]);\n        vector<pii> ans(n, {1e8, 1e8}); ans[0] = {0, 0};\n        queue<pii> q; q.push({0, -1});\n        while(!q.empty()){\n            pii t = q.front(); q.pop();\n            if(t.second != 0){\n                for(auto e: re[t.first]){\n                    if(ans[e].first == 1e8){\n                        ans[e].first = ans[t.first].second + 1;\n                        q.push({e, 0});\n                    }\n                }\n            }\n            if(t.second != 1){\n                for(auto e: be[t.first]){\n                    if(ans[e].second == 1e8){\n                        ans[e].second = ans[t.first].first + 1;\n                        q.push({e, 1});\n                    }\n                }\n            }\n        }\n        vector<int> anss;\n        for(auto v: ans){\n            if(v.first == 1e8 && v.second == 1e8) anss.push_back(-1);\n            else anss.push_back(min(v.first, v.second));\n        }\n        return anss;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-with-alternating-colors","has_notes":false,"flag_type":1}