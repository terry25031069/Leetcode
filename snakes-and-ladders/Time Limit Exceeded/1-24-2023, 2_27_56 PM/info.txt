{"id":884192358,"question_id":945,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1674541676,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/884192358/","is_pending":"Not Pending","title":"Snakes and Ladders","memory":"N/A","code":"class Solution {\npublic:\n    pair<int, int> trans(int t, int n){\n        int tmp = n * n - t;\n        return {tmp/n, n - 1 - tmp % n};\n    }\n    int snakesAndLadders(vector<vector<int>>& board) {\n        queue<int> q; q.push(1);\n        queue<int> step; step.push(0);\n        int n = board.size();\n        while(!q.empty()){\n            int t = q.front(); q.pop();\n            int curstep = step.front(); step.pop();\n            //cout << t << ' ' << curstep << endl;\n            for(int i = 1; i <= 6; i++){\n                if(t + i <= n * n){\n                    auto [x, y] = trans(t + i, n);\n                    if(board[x][y] != -1){\n                        if(board[x][y] == n * n) return curstep + 1;\n                        q.push(board[x][y]);\n                    }else{\n                        if(t + i == n * n) return curstep + 1;\n                        q.push(t + i);\n                    }\n                    step.push(curstep + 1);\n                }\n            }\n        }\n        return -1;\n    }\n};","compare_result":"111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"snakes-and-ladders","has_notes":false,"flag_type":1}