{"id":865295628,"question_id":303,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1671979334,"status":10,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/865295628/","is_pending":"Not Pending","title":"Range Sum Query - Immutable","memory":"17.2 MB","code":"class NumArray {\npublic:\n    vector<int> tmp;\n    NumArray(vector<int>& nums) {    \n        tmp.push_back(0);\n        for(int i = 0; i < nums.size(); i++){\n            tmp.push_back(nums[i]);\n            tmp[i + 1] += tmp[i];\n        }\n    }\n    \n    int sumRange(int left, int right) {\n        return tmp[right + 1] - tmp[left];\n    }\n};\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray* obj = new NumArray(nums);\n * int param_1 = obj->sumRange(left,right);\n */","compare_result":"111111111111111","title_slug":"range-sum-query-immutable","has_notes":false,"flag_type":1}