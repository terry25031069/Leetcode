{"id":751159680,"question_id":576,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1658239843,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/751159680/","is_pending":"Not Pending","title":"Out of Boundary Paths","memory":"N/A","code":"class Solution {\npublic:\n    const int N = 1e9 + 7;\n    int a[51][51] = {}, b[51][51] = {};\n    int dx[4] = {-1, 0, 1, 0};\n    int dy[4] = {0, 1, 0, -1};\n    long long ans = 0;\n    void printboard(int m, int n, int a[51][51]){\n        for(int i = 0; i < m; i++){\n            for(int j = 0; j < n; j++){\n                cout << a[i][j] << \" \\n\"[j == n-1];\n            }\n        }\n        cout << endl;\n    }\n    int findPaths(int m, int n, int maxMove, int startRow, int startColumn) {\n        a[startRow][startColumn] = 1;\n        for (int step = 0; step < maxMove; step++){\n            for(int i = 0; i < n; i++){\n                for(int j = 0; j < n; j++){\n                    if(a[i][j] && b[i][j] == 0){\n                        for(int k = 0; k < 4; k++){\n                            if(i + dx[k] < 0 || i + dx[k] >= m || j + dy[k] < 0 || j + dy[k] >= n){\n                                ans += a[i][j];                \n                                ans %= N;\n                            }else{\n                                a[i+dx[k]][j+dy[k]] = (a[i+dx[k]][j+dy[k]] + a[i][j]) % N;\n                                b[i+dx[k]][j+dy[k]] = 1;\n                            }\n                        }\n                        a[i][j] = 0;\n                    }\n                }\n            }\n            memset(b, 0, sizeof(b));\n            //printboard(m, n, a);\n        }\n        return ans;\n    }\n};","compare_result":"1111111110100100110001011001111101111111111111111111111111110011011110111001010111000010001011","title_slug":"out-of-boundary-paths","has_notes":false,"flag_type":1}