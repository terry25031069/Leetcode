{"id":929961137,"question_id":133,"lang":"cpp","lang_name":"C++","time":"11 months, 1 week","timestamp":1680931344,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/929961137/","is_pending":"Not Pending","title":"Clone Graph","memory":"9 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    vector<Node*> neighbors;\n    Node() {\n        val = 0;\n        neighbors = vector<Node*>();\n    }\n    Node(int _val) {\n        val = _val;\n        neighbors = vector<Node*>();\n    }\n    Node(int _val, vector<Node*> _neighbors) {\n        val = _val;\n        neighbors = _neighbors;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    map<int, Node*> m;\n    Node* dfs(Node* node){\n        Node* ans = NULL;\n        if(node){\n            ans = new Node(node->val);\n            m[node->val] = ans;\n            cout << ans->val << endl;\n            for(auto p: node->neighbors){\n                if(!m[p->val]) ans->neighbors.push_back(dfs(p));\n                else ans->neighbors.push_back(m[p->val]);\n            }\n        }\n        return ans;\n    }\n    Node* cloneGraph(Node* node) {\n        return dfs(node);\n    }\n};","compare_result":"1111111111111111111111","title_slug":"clone-graph","has_notes":false,"flag_type":1}