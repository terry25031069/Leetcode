{"id":926353558,"question_id":2726,"lang":"cpp","lang_name":"C++","time":"11 months, 2 weeks","timestamp":1680407911,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/926353558/","is_pending":"Not Pending","title":"Minimum Reverse Operations","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> minReverseOperations(int n, int p, vector<int>& banned, int k) {\n        unordered_set<int> s;\n        for(int i: banned) s.insert(i);\n        vector<int> ans(n, -1), visit(n, 0); ans[p] = 0;\n        queue<int> q; q.push(p); visit[p] = 1;\n        while(!q.empty()){\n            int t = q.front(); q.pop();\n            int ini = t - k + 1;\n            for(int idx = max(0, ini); idx <= t; idx++){\n                int p = idx - ini, loc = ini + 2 * p;\n                if(loc > -1 && loc < n && idx + k - 1  < n && s.find(loc) == s.end() && !visit[loc]){\n                    ans[loc] = ans[t] + 1;\n                    q.push(loc);\n                    visit[loc] = 1;\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_resulttitle_slug":"minimum-reverse-operations","has_notes":false,"flag_type":1}