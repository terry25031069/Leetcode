{"id":926326549,"question_id":2726,"lang":"cpp","lang_name":"C++","time":"11 months, 2 weeks","timestamp":1680405958,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/926326549/","is_pending":"Not Pending","title":"Minimum Reverse Operations","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> minReverseOperations(int n, int p, vector<int>& banned, int k) {\n        unordered_set<int> s;\n        for(int i: banned) s.insert(i);\n        vector<int> ans(n, -1), visit(n, 0); ans[p] = 0;\n        queue<int> q; q.push(p); visit[p] = 1;\n        while(!q.empty()){\n            int t = q.front(); q.pop();\n            for(int i = k % 2 + 1; i < k; i += 2){\n                if(t - i > -1 && s.find(t - i) == s.end() && !visit[t - i]){\n                    ans[t - i] = ans[t] + 1;\n                    q.push(t - i);\n                    visit[t - i] = 1;\n                }\n                if(t + i < n && s.find(t + i) == s.end() && !visit[t + i]){\n                    ans[t + i] = ans[t] + 1;\n                    q.push(t + i);\n                    visit[t + i] = 1;\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_resulttitle_slug":"minimum-reverse-operations","has_notes":false,"flag_type":1}