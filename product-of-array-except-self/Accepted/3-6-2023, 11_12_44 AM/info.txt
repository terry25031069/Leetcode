{"id":909886205,"question_id":238,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1678072364,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/909886205/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"25.5 MB","code":"class Solution {\npublic:\n    vector<int> productExceptSelf(vector<int>& nums) {\n        auto backnums = nums;\n        for(int i = 1; i < nums.size(); i++){\n            nums[i] *= nums[i-1];\n        }\n        for(int i = nums.size() - 1; i > 0; i--){\n            backnums[i-1] *= backnums[i];\n        }\n        // for(auto i: nums) cout << i << ' '; cout << endl;\n        // for(auto i: backnums) cout << i << ' '; cout << endl;\n        vector<int> ans;\n        for(int i = 0; i < nums.size(); i++){\n            if(i == 0) ans.push_back(backnums[1]);\n            else if(i == nums.size() - 1) ans.push_back(nums[nums.size() - 2]);\n            else ans.push_back(nums[i-1] * backnums[i+1]);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111","title_slug":"product-of-array-except-self","has_notes":false,"flag_type":1}