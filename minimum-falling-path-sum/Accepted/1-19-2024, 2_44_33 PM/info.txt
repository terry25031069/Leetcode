{"id":1150466237,"question_id":967,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1705646673,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1150466237/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"10.3 MB","code":"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& matrix) {\n        auto &mat = matrix;\n        int n = mat.size(), m = mat[0].size();\n        for(int i = 1; i < n; i++){\n            for(int j = 0; j < m; j++){\n                if(j == 0) mat[i][j] += min(mat[i-1][j], mat[i-1][j+1]);\n                else if(j == m-1) mat[i][j] += min(mat[i-1][j] , mat[i-1][j-1]);\n                else mat[i][j] += min(mat[i-1][j] , min(mat[i-1][j+1], mat[i-1][j-1]));\n            }\n        }\n        return *min_element(mat.back().begin(), mat.back().end());\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum","has_notes":false,"flag_type":1}