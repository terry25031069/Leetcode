{"id":866165374,"question_id":967,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1672120614,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/866165374/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"9.8 MB","code":"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& matrix) {\n        if(matrix.size() == 1) return matrix[0][0];\n        int ans = 1e9;\n        for(int i = 1; i < matrix.size(); i++){\n            for(int j = 0; j < matrix.size(); j++){\n                if(j == 0) matrix[i][j] += min(matrix[i - 1][j], matrix[i - 1][j + 1]);\n                else if(j == matrix.size() - 1) matrix[i][j] += min(matrix[i - 1][j], matrix[i - 1][j - 1]);\n                else matrix[i][j] += min(matrix[i - 1][j - 1], min(matrix[i-1][j], matrix[i-1][j + 1]));\n                if(i == matrix.size() - 1) ans = min(ans, matrix[i][j]);\n                //cout << matrix[i][j] << ' ';\n            }\n            //cout << endl;\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum","has_notes":false,"flag_type":1}