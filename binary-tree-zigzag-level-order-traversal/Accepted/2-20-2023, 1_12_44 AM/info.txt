{"id":901074623,"question_id":103,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1676826764,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/901074623/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"12.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> ans;\n    stack<TreeNode*> s;\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        if(!root) return ans;\n        int dir = 1;\n        s.push(root);\n        while(!s.empty()){\n            ans.push_back({});\n            stack<TreeNode*> tmp;\n            int n = s.size();\n            for(int i = 0; i < n; i++){\n                auto t = s.top(); s.pop(); \n                ans.back().push_back(t->val);\n                if(!dir && t->right) tmp.push(t->right);\n                if(t->left) tmp.push(t->left);\n                if(dir && t->right) tmp.push(t->right);\n            }\n            s = tmp;\n            dir = 1 - dir;\n        }   \n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}